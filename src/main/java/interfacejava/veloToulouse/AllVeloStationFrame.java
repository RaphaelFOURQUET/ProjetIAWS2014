/**
 * 
 */
package interfacejava.veloToulouse;

import java.util.ArrayList;

import javax.swing.JOptionPane;

import busMetro.Destination;
import busMetro.Ligne;
import busMetro.LineDestArret;

import veloToulouse.StaticVeloStation;
import veloToulouse.VeloStation;
import veloToulouse.VeloStationService;

/**
 *
 * @author Raphaël
 */
public class AllVeloStationFrame extends javax.swing.JFrame {
    
    //Attributes
    private StaticVeloStation currentChoice = null;

    /**
     * Creates new form AllVeloStationFrame
     */
    public AllVeloStationFrame() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */ 
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        allStationtable = new javax.swing.JTable();
        lancerRecherche = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextPane1.setText("Choisissez une station de vélos.");
        jScrollPane1.setViewportView(jTextPane1);

        allStationtable.setModel(new ModeleStatiqueVeloStation());
        allStationtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allStationtableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(allStationtable);

        lancerRecherche.setText("Ok !");
        lancerRecherche.setEnabled(false);
        lancerRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lancerRechercheActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(lancerRecherche)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lancerRecherche)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    @SuppressWarnings("static-access")
	private void lancerRechercheActionPerformed(java.awt.event.ActionEvent evt) {
    	int res = 0;    	
    	VeloStationService vs = new VeloStationService();
        //TODO executer la requete velo pour mettre à jour res
    	VeloStation v = vs.getVeloStationById(currentChoice.getNumber());
        res = v.getAvailableBike();
        //ouvrir fenetre selon reponse
        JOptionPane d = new JOptionPane();
        if(res==-2)
        	JOptionPane.showMessageDialog( this, "Une erreur est survenue durant le traitement de la requète.", "Erreur traitement requète", JOptionPane.ERROR_MESSAGE);
        if(res==-1)
            JOptionPane.showMessageDialog( this, "Erreur : Station fermée", "Station Fermée", JOptionPane.ERROR_MESSAGE);
        else if(res>=0) {
            JOptionPane.showMessageDialog( this, "Il y a "+res+" vélo(s) disponible(s) et "+v.getAvailableBikeStands()+" point(s) d'attache disponible(s) sur cette station.", "Vélos disponibles", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void setRechercheEnabled(boolean b) {
        lancerRecherche.setEnabled(b);
    }
    
    private void allStationtableMouseClicked(java.awt.event.MouseEvent evt) {
    	int ligne;
        ligne = allStationtable.getSelectedRow();
        currentChoice = lineToChoice(ligne);
        setRechercheEnabled(true);
    }
    
    /**
     * Retourne le StaticVeloStation associee a la ligne selectionnee
     * @param ligne ligne jtable selectionnee
     * @return StaticVeloStation associe à la ligne
     */
     private StaticVeloStation lineToChoice(int ligne) {
   	  
   	  	StaticVeloStation res = new StaticVeloStation();
   	  	Integer number = (Integer) allStationtable.getValueAt(ligne, 0);
   	  	String name = (String) allStationtable.getValueAt(ligne, 1);
   	  	String adress = (String) allStationtable.getValueAt(ligne, 2);
   	  	res.setNumber(number);
   	  	res.setName(name);
   	  	res.setAdress(adress);
   	  
   	  	return res;
     }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllVeloStationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllVeloStationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllVeloStationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllVeloStationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AllVeloStationFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JTable allStationtable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton lancerRecherche;
    // End of variables declaration
}
